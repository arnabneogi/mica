<?php
/**
 * @file
 * Mica Studies Export  file
 */

include_once('mica_studies_export_contact.inc');
include_once('mica_studies_export_study.inc');
include_once('mica_studies_export_population.inc');
include_once('mica_studies_export_dce.inc');

function mica_studies_export_permission() {
  return array(
    'export studies' => array(
      'title' => t('Export Studies'),
      'description' => t('Allow users exporting studies')
    )
  );
}

function mica_studies_export_can_export($node) {
  return $node->type == 'study' && node_access('view', $node) && user_access('export studies');
}

/**
 * Implements hook_menu().
 */

function mica_studies_export_menu() {
  $items = array();
  $items['node/%node/export'] = array(
    'title' => 'Export nodes',
    //todo verify access to this action, button should be visible only if user has 'can export studies' permission.
    'access callback' => 'mica_studies_export_can_export',
    'access arguments' => array(1),
    'page callback' => 'mica_studies_export_batch_export',
    'page arguments' => array(1),
    'weight' => 5,
    'type' => MENU_LOCAL_ACTION,
  );
  return $items;
}

function mica_studies_export_batch_export($study) {

  if (is_numeric($study)) {
    $study = node_load($study);
  }
  $wrapper = entity_metadata_wrapper('node', $study);
  $operations = array();
  //Create /Tmp folder and pass the path
  $operations[] = array('_mica_studies_export_create_tmp_folder', array());
  // extract nid to export
  $nids = _mica_studies_export_find_nodes($study->nid);
  foreach ($nids as $nid) {
    //  _mica_studies_export_gen_xml($nid);

    $operations[] = array('_mica_studies_export_gen_xml', array($nid));
  }

  // Archive the files
  $operations[] = array('_mica_studies_export_create_zip_file', array());
  //  Delete tmp folder
  $operations[] = array('_mica_studies_export_deletetmp', array());

  // prepare batch steps
  batch_set(array(
    'operations' => $operations,
    'finished' => 'mica_studies_export_batch_finished',
  ));
  $redirect = 'node/' . $nids[0];
  batch_process($redirect);
}

/*
 * Finish action
 * */
function mica_studies_export_batch_finished($success, $results, $operations) {

}

/*
 *Create tmp folder
 * */
function _mica_studies_export_create_tmp_folder(&$context) {

  if (empty($context['results']['tmpfolder'])) {
    $context['message'] = t('Preparing process.....');
    $tmp_folder_name = 'export-' . date('Y-m-d_H_m_s', time());
    drupal_mkdir(_mica_studies_export_get_tmp_folder_full_path($tmp_folder_name));

    $context['results']['tmp_folder_name'] = $tmp_folder_name;
  }
}

function _mica_studies_export_get_tmp_folder_full_path($tmp_file_name) {
  return file_directory_temp() . '/' . $tmp_file_name;
}

/*
 * Xml generation
 * */
//function _mica_studies_export_gen_xml($nid, &$context)
function _mica_studies_export_gen_xml($nid, &$context) {
  $tmp_folder_name = $context['results']['tmp_folder_name'];
  $wrapper = entity_metadata_wrapper('node', $nid);

  $type = $wrapper->type->value();
  switch ($type) {
    case 'study';
      $xml = _mica_studies_export_study_xml($nid, $type, $tmp_folder_name);

      break;
    case 'population';
      $xml = _mica_studies_export_population_xml($nid);

      break;
    case 'data_collection_event';
      $xml = _mica_studies_export_dce_xml($nid, $type, $tmp_folder_name);

      break;
    case 'contact';
      $xml = _mica_studies_export_contact_xml($nid);

      break;

  }
  $context['message'] = t('Processing Node "%title"', array('%title' => $wrapper->title->value()));

  if (isset($xml)) {
    file_unmanaged_save_data($xml, 'temporary://' . $tmp_folder_name . '/' . $type . '-' . $wrapper->uuid->value() . '.xml', FILE_EXISTS_REPLACE);

    //sand some parameters to next bach
    $context['results']['tmp_folder_name'] = $tmp_folder_name;

  }
}

/*
 * Copy attachement files of each node
 * */
function _mica_studies_export_copy_attachment_file($documents, $type, $tmp_folder_name) {

  if (!is_dir('temporary://' . $tmp_folder_name . '/' . $type . '-documents')) {
    $tmp_folder_name_docu = 'temporary://' . $tmp_folder_name . '/' . $type . '-documents';
    drupal_mkdir($tmp_folder_name_docu);

    foreach ($documents as $document) {
      file_unmanaged_copy($document['uri'], $tmp_folder_name_docu, FILE_EXISTS_REPLACE);

    }
  }
}

/*
 * Creation zip file and move it to public
 * */
function _mica_studies_export_create_zip_file(&$context) {

  $context['message'] = t('Compressing XML files');
  global $user;

  $tmp_folder_name = $context['results']['tmp_folder_name'];
  $tmp_folder_full_path = _mica_studies_export_get_tmp_folder_full_path($tmp_folder_name);

  // Archive Xml's files
  //retrieve files in directory to archive
  $scanned_directory = array_diff(scandir($tmp_folder_full_path), array('..', '.'));

  //create directories in public folder if not exist
  if (!is_dir('public:///' . $user->name . '/export')) {
    drupal_mkdir('public:///' . $user->name . '/export', NULL, TRUE, NULL);
  }

  $filename = drupal_realpath('public://') . '/' . $user->name . '/export/' . $tmp_folder_name . '.zip';

  //Archive the files
  fopen($filename, 'w');
  $zip = new ZipArchive;
  $zip->open($filename);
  foreach ($scanned_directory as $file) {

    if (!is_dir($tmp_folder_full_path . '/' . $file)) {
      $zip->addFile($tmp_folder_full_path . '/' . $file, $tmp_folder_name . '/' . $file);
    }

    elseif (is_dir($tmp_folder_full_path . '/' . $file)) {
      $scanned_subdirectory = array_diff(scandir($tmp_folder_full_path . '/' . $file), array('..', '.'));
      $zip->addEmptyDir($tmp_folder_full_path . '/' . $file . '/' . $file, $tmp_folder_name . '/' . $file);
      foreach ($scanned_subdirectory as $subfile) {
        $zip->addFile($tmp_folder_full_path . '/' . $file . '/' . $subfile, $tmp_folder_name . '/' . $file . '/' . $subfile);
      }
    }
    fclose($filename);
    $context['results']['tmp_folder_name'] = $tmp_folder_name;
  }
}

/*
 * Delete tmp Folder
 */
function _mica_studies_export_deletetmp(&$context) {
  global $user;
  $tmp_folder_name = $context['results']['tmp_folder_name'];
  $tmp_folder_full_path = _mica_studies_export_get_tmp_folder_full_path($tmp_folder_name);

  file_unmanaged_delete_recursive($tmp_folder_full_path);

  drupal_set_message(
    t("Your Exported Study file download : <a href='@file_url'>here</a> <br /> You can find this file in your <a href='@file_manager_url'>File manager</a>",
      array(
        '@file_url' => file_create_url('public:///' . $user->name . '/export/' . $tmp_folder_name . '.zip'),
        '@file_manager_url' => url('user/' . $user->uid . '/imce')
      )),
    'status');
}

function _mica_studies_export_find_nodes($study_nid) {
  $nids = array();
  $nids[] = $study_nid;

  $study_wrapper = entity_metadata_wrapper('node', $study_nid);
  foreach ($study_wrapper->field_study_populations->getIterator() as $pop_wrapper) {
    $nids[] = $pop_wrapper->nid->value();
    foreach ($pop_wrapper->field_pop_dce->getIterator() as $dce_wrapper) {
      $nids[] = $dce_wrapper->nid->value();
    }
  }
  foreach ($study_wrapper->field_investigators->getIterator() as $investigator_wrapper) {
    $nids[] = $investigator_wrapper->nid->value();
  }
  foreach ($study_wrapper->field_contacts_ref->getIterator() as $contact_wrapper) {
    $nids[] = $contact_wrapper->nid->value();
  }

  return $nids;
}