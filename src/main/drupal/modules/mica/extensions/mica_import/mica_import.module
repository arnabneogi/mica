<?php
/**
 * @file
 * Mica Import  file
 */

function mica_import_permission() {
  return module_invoke_all('mica_import_permission_parameters');

}

function mica_import_can_import() {
  return current(module_invoke_all('mica_import_can_import_node'));
}

/**
 * Implements hook_menu().
 */

function mica_import_menu() {

  $items = array();
  $items['import-xml'] = array(
    'title' => 'Import nodes from XML',
    //todo verify access to this action, button should be visible only if user has 'can import studies' permission.
    'access callback' => 'user_access',
    'access arguments' => array('import studies'),
    'page callback' => 'mica_import_form',
    'page arguments' => array(1),
  );
  return $items;
}

function mica_import_form() {

  return drupal_get_form('mica_import_upload_form');
}

function mica_import_upload_form() {
  $form['file'] = array(
    '#type' => 'file',
    '#title' => t('XML to Upload'),
    '#description' => t('Upload a Zip file to import , allowed extensions:zip'),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  $form['#submit'][] = 'mica_import_upload_form_submit';
  $form['#validat'][] = 'mica_import_upload_form_validate';
  return $form;
}

function mica_import_upload_form_submit($form, &$form_state) {
  $file = $form_state['storage']['file'];
  // We are done with the file, remove it from storage.
  unset($form_state['storage']['file']);
  // Make the storage of the file permanent
  $file->status = FILE_STATUS_PERMANENT;
  // Save file status.
  file_save($file);
  // Set a response to the user.
  drupal_set_message(t('The file has been uploaded and the ZIP XML\'s has been imported, filename: @filename.', array('@filename' => $file->filename)));
}

function mica_import_upload_form_validate($form, &$form_state) {
  global $user;
  $file = file_save_upload('file', array(
    'file_validate_extensions' => array('zip'), // Validate extensions.
  ));

  // If the file passed validation:
  if ($file) {
    $directory = 'public://'. $user->name . '/export';
    if (!is_dir($directory)) {
      drupal_mkdir($directory, NULL, TRUE, NULL);
    }

    // Move the file, into the Drupal file system
    if ($file = file_move($file, $directory,FILE_EXISTS_RENAME)) {
      // Save the file for use in the submit handler.
      $form_state['storage']['file'] = $file;
    _mica_import_unzip_file($file);

    }
    else {
      form_set_error('file', t('Failed to write the uploaded file to the site\'s file folder.'));
    }
  }
  else {
    form_set_error('file', t('No file was uploaded.'));
  }
}

/*
 * Unzip file Method
 * @param $file Object send by form upload
 *
 * */
function _mica_import_unzip_file($file){
  if ($wrapper = file_stream_wrapper_get_instance_by_uri($file->uri)) {
    $file_path = $wrapper->realpath();
    $zip = new ZipArchive();
    $res = $zip->open($file_path);
    if ($res == ZipArchive::ER_OPEN) {
      $zip->extractTo('temporary://'.$file->filename);
    } else {
      form_set_error('file', t('Failed to Unzip file'));
    }
    $zip->close();
  }

}