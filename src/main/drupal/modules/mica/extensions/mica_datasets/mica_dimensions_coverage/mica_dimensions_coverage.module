<?php
/**
 * @file
 * Mica Datasets Crosstab module file
 */

include_once('mica_dimensions_coverage_init.inc');

/**
 * Implements hook_menu()
 */
function mica_dimensions_coverage_menu() {

  $items['content/datasets-domains-coverage-table'] = array(
    'title' => t('Domain Coverage table'),
    'page callback' => 'mica_dimensions_coverage_page',
    'type' => MENU_LOCAL_ACTION,
  );

  $items['content/datasets-domains-coverage-table-ajx-query'] = array(
    'type' => MENU_CALLBACK,
    //our custom ajax callback
    'page callback' => 'datasets_domains_coverage_table_ajax_studies',
    //access to user can access content in a site, you can define your own permission using hook_perm()
    'access arguments' => array('access content'),

  );

  $items['content/datasets-domains-coverage-table-refrech-table-block'] = array(
    //'title' => t('custom ajax'),
    'type' => MENU_CALLBACK,
    //our custom ajax callback
    'page callback' => 'datasets_domains_coverage_table_ajax_refrech_table_block',
    //access to user can access content in a site, you can define your own permission using hook_perm()
    'access arguments' => array('access content'),
  );
  return $items;
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function mica_dimensions_coverage_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  $links = array();
  switch ($root_path) {
    case 'datasets':
    case 'study-datasets':
    case 'harmonization-datasets':
      $links['view-dataset-crosstab-tab'] = array(
        '#theme' => 'menu_local_action',
        '#link' => array(
          'title' => t('Domain Coverage table'),
          'page callback' => 'mica_dimensions_coverage_page',
          'href' => 'content/datasets-domains-coverage-table', // Arguments could be taxonomies and dataset
          'localized_options' => array(
            'attributes' => array('class' => 'highlight'),
            'query' => array(
              'type' => ($root_path === 'study-datasets') ? 'study' : 'harmonization',
            )
          )
        ),
      );
      break;
  }
  $data['actions']['output'] = array_merge($data['actions']['output'], $links);
}

/**
 * Implements hook_block_info().
 */
function mica_dimensions_coverage_block_info() {

  $blocks['tab-dimention-coverage'] = array(
    'info' => 'Dimension coverage table',
    'title' => NULL,
    'status' => 1,
    'region' => 'content',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'content/datasets-domains-coverage-table',
    'weight' => 50,
    'custom' => 1,
  );

  $blocks['filter-dimention-coverage'] = array(
    'info' => 'Search filter coverage table',
    'title' => NULL,
    'status' => 1,
    'region' => 'content',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => 'content/datasets-domains-coverage-table',
    'weight' => 49,
    'custom' => 1,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */

function mica_dimensions_coverage_block_view($delta) {
  $content = '';
  ctools_add_css('mica_dimensions_coverage', 'mica_dimensions_coverage');
  //  Script to perform ajax action to deal with multi select fields
  ctools_add_js('mica_dimensions_coverage.dynamic-multiselect', 'mica_dimensions_coverage');
  drupal_add_js(array(
    'BaseLocal' => $GLOBALS['base_url']
  ), array('type' => 'setting'));
  switch ($delta) {
    case 'filter-dimention-coverage':
      $_SESSION['storage']['studies'] = isset($_GET['studies']) ? $_GET['studies'] : NULL;
      $_SESSION['storage']['dce'] = isset($_GET['dce']) ? $_GET['dce'] : NULL;
      $_SESSION['storage']['dataset'] = isset($_GET['dataset']) ? $_GET['dataset'] : NULL;
      $_SESSION['storage']['type'] = isset($_GET['type']) ? $_GET['type'] : NULL;
      $_SESSION['storage']['show-dce'] = isset($_GET['show-dce']) ? $_GET['show-dce'] : NULL;
      $content = drupal_get_form('mica_dimensions_coverage_filter_form');
      $block = array(
        '#theme' => 'mica_subtheme',
        'subject' => t('Mica Domain Coverage table: '),
        'content' => $content,
      );
      return $block;

    case 'tab-dimention-coverage':
      if (isset($_REQUEST['type']) && $_REQUEST['type'] == 'harmonization') {
        if (!empty($_GET['dataset']) && !in_array('noItem', $_GET['dataset'])) {
          $content = _mica_dimensions_coverage_tabledata_display(isset($_GET['dataset']) ? $_GET['dataset'] : NULL);
        }
      }
      else {
        if (isset($_GET['show-dce']) && $_GET['show-dce'] == 1) {
          if (!empty($_GET['dce'])) {
            $content = _mica_dimensions_coverage_tabledata_display_dce(isset($_GET['dce']) ? $_GET['dce'] : NULL);
          }
        }
        elseif (!empty($_GET['studies'])) {
          $content = _mica_dimensions_coverage_tabledata_display_study(isset($_GET['studies']) ? $_GET['studies'] : NULL);
        }
      }
      $block = array(
        '#theme' => 'mica_subtheme',
        //  'subject' => t('Mica Domain Coverage table: '),
        'content' => array('#markup' => $content),
        'weight' => 49,
      );
      return $block;

  }
}

/**
 * Implements hook_library().
 */
function mica_dimensions_coverage_library() {
  $libraries = array();
  $lib_path = libraries_get_path('datatables');
  // Make sure we have a valid library path before returning library load info.
  if (!empty($lib_path)) {
    $libraries['datatables'] = array(
      'title' => 'DataTables',
      'website' => 'http://datatables.net/',
      'version' => '1.9',
      'js' => array(
        $lib_path . '/media/js/jquery.dataTables.js' => array(),
        $lib_path . '/extras/ColVis/media/js/ColVis.js' => array(),
        $lib_path . '/extras/FixedColumns/media/js/FixedColumns.js' => array(),
        $lib_path . '/extras/TableTools/media/js/ZeroClipboard.js' => array(),
        $lib_path . '/extras/TableTools/media/js/TableTools.js' => array()
      ),
      'css' => array(
        $lib_path . '/media/css/demo_table.css' => array(),
        $lib_path . '/extras/ColVis/media/css/ColVis.css' => array(),
        $lib_path . '/extras/FixedColumns/media/css/ColVisAlt.css' => array(),
        $lib_path . '/extras/TableTools/media/css/TableTools.css' => array()
      )
    );
  }
  return $libraries;
}

/*
 * Perform queries by studies nid,
 * Param $study_nid : passed by Get request
 * Return $output : content formatted table
 * */
Function _mica_dimensions_coverage_tabledata_display_study($study_id = NULL) {
  global $base_path;
  if (!empty($study_id)) {
    $dataset = mica_dimensions_coverage_studies($study_id);
  }
  else {
    $dataset = mica_dimensions_coverage_studies();
  }
  /*Header to pass */
  $grouped_dce_head = array();
  $header_row = array();
  $popovers = array();
  $contenttab = '';
  $is_bootstrap = mica_core_is_bootstrap_based_theme();
  if (!empty($dataset['header'])) {
    foreach ($dataset['header'] as $key_header => $study) {

      $dce_tootltip_id = 'study_' . $key_header;
      if ($is_bootstrap) {
        $popovers[] = $dce_tootltip_id;
      }
      $header_row[$key_header] = '<span data-content="' . $study[key($study)] . '" id="study_' . $key_header . '">' . truncate_utf8($study[key($study)], 25, FALSE, TRUE) . '</span>';
    }

    $study_iter = 0;
    foreach ($grouped_dce_head as $grouped_study) {
      $study_tooltep_id = 'study_' . $study_iter;
      if ($is_bootstrap) {
        $popovers[] = $study_tooltep_id;
      }
      ++$study_iter;
    }
    $dataset['header'] = $header_row;

    /****clean data ******/
    $taxonomies = _mica_datasets_taxonomies();
    $rows = _mica_dimensions_coverage_dimension_table($dataset, $taxonomies, 'study');
    $contenttab = _mica_dimensions_coverage_dimension_them_tab($header_row, $rows);
    if (!empty($taxonomies) && !empty($rows)) {
      /***************************/
    // Add Js Settings
    ctools_add_js('mica_dimensions_coverage', 'mica_dimensions_coverage');
    drupal_add_js(array(
      'libPath' => url(_mica_dimensions_coverage_deal_with_multilangue_url() . '/' . libraries_get_path('datatables'))
    ), array('type' => 'setting'));
    drupal_add_library('mica_dimensions_coverage', 'datatables');
  }
    else {
      $contenttab = t('Can\'t display Domain coverage table ');
      drupal_set_message($contenttab . t("Make sure taxonomies are imported Go to <a href='@url'>Import Taxonomies</a>", array('@url' => _mica_dimensions_coverage_deal_with_multilangue_url() . $base_path . 'admin/config/development/mica_datasets')), 'warning');
    }
  }
  mica_datasets_prepare_prettify();
  //Setting tooltip
  $jquery_popover = '';
  foreach ($popovers as $popover) {
    $jquery_popover .= "jQuery('#$popover').popover({ html: true, placement: 'top', trigger: 'hover',container:'body' }); ";
  }

  drupal_add_js("jQuery(function () { $jquery_popover });", 'inline');

  $output = '<div class="loader"></div>';
  $output .= "<div id='table-refresh'>" . $contenttab . "</div>";

  return $output;
}

/*
 * Perform queries by Dce nid,
 * Param $ids_dce : passed by Get request () auto selected by selecting Studies (Hidden DCE Form)
 * Return $output : content formatted table
 * */

Function _mica_dimensions_coverage_tabledata_display_dce($ids_dce = NULL) {
  global $base_path;
  if (!empty($ids_dce)) {
    $dataset = mica_dimensions_coverage_dce($ids_dce);
  }
  else {
    $dataset = mica_dimensions_coverage_dce();
  }
  /*Header to pass */
  $grouped_dce_head = array();
  $study_head_group = array();

  $header_row = array();
  $popovers = array();
  $study_iter = 0;
  $is_bootstrap = mica_core_is_bootstrap_based_theme();
  if (!empty($dataset)) {
    foreach ($dataset['header'] as $key_header => $study) {

      foreach ($study as $study_title => $study_dce) {
        $study_tooltep_id = 'study_' . $key_header;
        if ($is_bootstrap) {
          $popovers[] = $study_tooltep_id;
        }
        $key_study_span = '<span data-content="' . key($study) . '" id="' . $study_tooltep_id . '">' . truncate_utf8(key($study), 25, FALSE, TRUE) . '</span>';
        $study_head_group [] = array('data' => $key_study_span, 'colspan' => count($study_dce));
        ++$study_iter;

        foreach ($study_dce as $id_dce => $dce) {
          $grouped_dce_head[$id_dce][$key_header] = $dce;
          $dce_tootltip_id = 'dce_' . $id_dce;
          if ($is_bootstrap) {
            $popovers[] = $dce_tootltip_id;
          }

          $header_row[$id_dce] = '<span data-content="' . $dce . '" id="dce_' . $id_dce . '">' . truncate_utf8($dce, 8, FALSE, TRUE) . '</span>';
          $to_insert = $study_title . '|' . (!empty($dce) ? $dce : '');

          $dce_head_group_hidden [] = array('data' => $to_insert, 'class' => 'tohide');
        }
      }
    }

    $dataset['header'] = $header_row;

    /****clean data ******/
    $taxonomies = _mica_datasets_taxonomies();
    $rows = array();
    array_unshift($dce_head_group_hidden, '');
    array_unshift($dce_head_group_hidden, '');
    array_unshift($rows, $dce_head_group_hidden);
    $content_tab_row = $rows_tab = _mica_dimensions_coverage_dimension_table($dataset, $taxonomies, 'dce');
    array_unshift($rows_tab, $rows[0]);
    $contenttab = _mica_dimensions_coverage_dimension_them_tab($header_row, $rows_tab, 'dce');

    /***************************/
    // Add Settings
    if (!empty($taxonomies) && !empty($content_tab_row)) {
// Reconstruct Table Dom header with js script by append the correct header
    if ((empty($_GET['type']) || $_GET['type'] != 'harmonization')) {

      ctools_add_js('mica_dimensions_coverage.header_add', 'mica_dimensions_coverage');
      drupal_add_js(array(
        'header_study_to_add' => $study_head_group,
        //   'header_dce_to_add' => $dce_head_group,
        'dce_title' => t('Data collection event'),
        //   'study_title' => t('Study')
      ), array('type' => 'setting'));
    }
      ctools_add_js('mica_dimensions_coverage', 'mica_dimensions_coverage');
      drupal_add_library('mica_dimensions_coverage', 'datatables');
    }
    else {
      $contenttab = t('Can\'t display Domain coverage table ');
      drupal_set_message($contenttab . t("Make sure taxonomies are imported Go to <a href='@url'>Import Taxonomies</a>", array('@url' => _mica_dimensions_coverage_deal_with_multilangue_url() . $base_path . 'admin/config/development/mica_datasets')), 'warning');
    }

  }

  mica_datasets_prepare_prettify();
  //Setting tooltip

  $jquery_popover = '';
  foreach ($popovers as $popover) {
    $jquery_popover .= "jQuery('#$popover').popover({ html: true, placement: 'top', trigger: 'hover',container:'body' }); ";
  }

  drupal_add_js("jQuery(function () { $jquery_popover });", 'inline');
  $output = '<div class="loader"></div>';
  $output .= "<div id='table-refresh'>" . $contenttab . "</div>";

  return $output;
}

/*
 * Perform queries by Datasets in harmonization table nid,
 * Param $ids_dataset : passed by Get request
 * Return $output : content formatted table
 * */

Function _mica_dimensions_coverage_tabledata_display($ids_dataset = NULL) {
  global $base_path;
  if (!empty($ids_dataset)) {
    $dataset = mica_dimensions_coverage_datasets_harmonization($ids_dataset);
  }
  else {
    $dataset = mica_dimensions_coverage_datasets_harmonization();
  }
  /*Header to pass */
  $grouped_dataset_head = array();
  $contenttab = '';
  $header_row = array();
  $popovers = array();

  $is_bootstrap = mica_core_is_bootstrap_based_theme();
  if (!empty($dataset['header'])) {
    foreach ($dataset['header'] as $key_header => $dataset_detail) {

      $dce_tootltip_id = 'study_' . $key_header;
      if ($is_bootstrap) {
        $popovers[] = $dce_tootltip_id;
      }
      $header_row[$key_header] = '<span data-content="' . $dataset_detail[key($dataset_detail)] . '" id="dataset_' . $key_header . '">' . truncate_utf8($dataset_detail[key($dataset_detail)], 25, FALSE, TRUE) . '</span>';
    }

    $datset_iter = 0;
    foreach ($grouped_dataset_head as $grouped_datset) {
      $study_tooltep_id = 'dataset_' . $datset_iter;
      if ($is_bootstrap) {
        $popovers[] = $study_tooltep_id;
      }
      ++$datset_iter;
    }

    $dataset['header'] = $header_row;
    /****clean data ******/
    $taxonomies = _mica_datasets_taxonomies();

    $rows = _mica_dimensions_coverage_dimension_table($dataset, $taxonomies, 'dataset');
    $contenttab = _mica_dimensions_coverage_dimension_them_tab($header_row, $rows, '');
    if (!empty($taxonomies) && !empty($rows)) {
      /***************************/
    // Add Js Settings
    ctools_add_js('mica_dimensions_coverage', 'mica_dimensions_coverage');
    drupal_add_library('mica_dimensions_coverage', 'datatables');
    }
    else {
      $contenttab = t('Can\'t display Domain coverage table ');
      drupal_set_message($contenttab . t("Make sure taxonomies are imported Go to <a href='@url'>Import Taxonomies</a>", array('@url' => _mica_dimensions_coverage_deal_with_multilangue_url() . $base_path . 'admin/config/development/mica_datasets')), 'warning');
    }
  }

  mica_datasets_prepare_prettify();
  //Setting tooltip
  $jquery_popover = '';
  foreach ($popovers as $popover) {
    $jquery_popover .= "jQuery('#$popover').popover({ html: true, placement: 'top', trigger: 'hover',container:'body' }); ";
  }

  drupal_add_js("jQuery(function () { $jquery_popover });", 'inline');

  /***************************/
  // Add Settings
  $output = '<div class="loader"></div>';
  $output .= "<div id='table-refresh'>" . $contenttab . "</div>";
  return $output;
}

/*
 * Construction of drupal table
 * */
function _mica_dimensions_coverage_dimension_them_tab($head, $rows, $type = NULL) {
  // Insert vocabulary name in the first column
  if (isset($head)) {
    array_unshift($head, '');
    if ($type == 'harmonization') {
      array_splice($head, 0, 0, '');
      //  array_splice($head, 0, 0, t("@title", array('@title' => 'Datasets')));
    }
    elseif ($type == 'study') {
      array_splice($head, 0, 0, '');
      //      array_splice($head, 0, 0, t("@title", array('@title' => 'Data Collection Events')));
    }
    else {
      array_splice($head, 0, 0, '');
      //  array_splice($head, 0, 0, t("@title", array('@title' => 'Study')));

    }
    $tab = theme(
      'table',
      array(
        'header' => $head,
        'rows' => $rows,
        'empty' => t('No information found'),
        'sticky' => FALSE,
        'attributes' => array('class' => 'dataset_crosstab', 'id' => 'example'),
      )
    );
    return $tab;
  }

  return theme(
    'table',
    array(
      'header' => array(),
      'rows' => $rows,
      'empty' => t('No information found'),
      'sticky' => FALSE,
      'attributes' => array('class' => 'dataset_crosstab', 'id' => 'example'),
    )
  );
}

/*
 * Form search
 * */
function mica_dimensions_coverage_filter_form($form, &$form_state) {
  $options = datasets_domains_coverage_table_ajax_studies();
  $form = array(
    '#attributes' => array('class' => 'form-inline form-vertical', 'role' => 'form'),
    '#action' => _mica_dimensions_coverage_deal_with_multilangue_url() . '/content/datasets-domains-coverage-table',
    '#method' => 'get'
  );
  if (empty($_GET['type']) || ($_GET['type']) && $_GET['type'] != 'harmonization') {
    $form['studies'] = array(
      '#prefix' => '<div class="col-xs-4 inline-input">',
      '#suffix' => '</div>',
      '#type' => 'select',
      '#title' => t('Studies'),
      '#default_value' => !empty($_SESSION['storage']['studies']) ? $_SESSION['storage']['studies'] : NULL,
      '#options' => isset($options['studies']) ? $options['studies'] : array('noItem' => t('No Studies')),
      '#multiple' => TRUE,
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
    );

    $form['dce'] = array(
      '#prefix' => '<div class="col-xs-4 inline-input hidden-dce">',
      '#suffix' => '</div>',
      '#type' => 'select',
      '#title' => t('Data collection event'),
      '#default_value' => !empty($_SESSION['storage']['dce']) ? $_SESSION['storage']['dce'] : NULL,
      '#options' => isset($options['dce']) ? $options['dce'] : array('noItem' => t('No DCE')),
      '#multiple' => TRUE,
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
    );

    $form['show-dce'] = array(
      '#prefix' => '<div class="col-xs-4 inline-input">',
      '#suffix' => '</div>',
      '#type' => 'checkbox',
      '#title' => t('Show Data collection events'),
      '#default_value' => !empty($_SESSION['storage']['show-dce']) ? $_SESSION['storage']['show-dce'] : NULL
    );

  }
  else {
    $form['dataset'] = array(
      '#prefix' => '<div class="col-xs-4 inline-input">',
      '#suffix' => '</div>',
      '#type' => 'select',
      '#title' => t('Datasets'),
      '#default_value' => !empty($_SESSION['storage']['dataset']) ? $_SESSION['storage']['dataset'] : NULL,
      '#multiple' => TRUE,
      '#options' => !empty($options['dataset']) ? $options['dataset'] : array('noItem' => t('No Dataset')),
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
    );
  }

  $form['type'] = array(
    '#type' => 'hidden',
    '#value' => !empty($_SESSION['storage']['type']) ? $_SESSION['storage']['type'] : (!empty($_GET['type']) ? $_GET['type'] : NULL),
  );

  $form['submit'] = array(
    '#prefix' => '<div class="col-xs-4 block-input leftbotton hidden-dce">',
    '#suffix' => '</div>',
    '#type' => 'submit',
    '#value' => t('Proceed search'),
  );
  unset($_SESSION['storage']);
  return $form;
}

/*
 * Method to populate multi-select fields by ajax call
 * */
function datasets_domains_coverage_table_ajax_studies() {
  $query = new EntityFieldQuery();
  $options = array();
  $type = !empty($_POST['type']) ? $_POST['type'] : NULL;
  if (!empty($_POST['studies'])) {
    if (strstr($_POST['studies'], ',')) {
      $studies = explode(',', $_POST['studies']);
    }
    else {
      $studies = $_POST['studies'];
    }
    // Or for Drupal 7, just in case you want to know

    $result = $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', 'study')
      ->propertyCondition('nid', $studies)
      ->execute();

    $options = datasets_domains_coverage_table_return_studies($result, NULL, $type);
    if (isset($options['dce'])) {
      drupal_json_output($options['dce']);
      drupal_exit();
    }
    else {
      drupal_exit();
    }
  }
  if (!empty($_POST['isAjax']) && empty($_POST['studies'])) {
    drupal_exit();
  }
  else {
    $result = $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', 'study')
      ->execute();
    $options = datasets_domains_coverage_table_return_studies($result, NULL, $type);

  }
  return $options;
}

/*
 * Return array of dataset by studies if linked
 * */
function datasets_domains_coverage_table_return_studies($result, $dces = NULL, $type = NULL) {
  $options = array();
  $is_study = FALSE;

  $_GET['type'] = !empty($_GET['type']) ? $_GET['type'] : (!empty($type) ? $type : NULL);

  if (empty($_GET['type']) || ($_GET['type'] != 'harmonization')) {
    $is_study = TRUE;
  }
  //get harmonized dataset unlinked to studies to populate multiselect dataset field
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'dataset');
  // Filter by dataset type
  if (!empty($_GET['type']) && $_GET['type'] == 'harmonization') {
    $query->fieldCondition('field_dataset_type', 'value', 'harmonization');
  }
  elseif (!empty($_GET['type']) && $_GET['type'] == 'study') {
    $query->fieldCondition('field_dataset_type', 'value', 'study');
  }
  $entities = $query->execute();
  if (!empty($entities)) {
    $keys = array_keys($entities['node']);
  }
  if ($_GET['type'] == 'harmonization') {
    if (!empty($keys)) {
      foreach ($keys as $dataset_id) {
        $dataset_wrapper = entity_metadata_wrapper('node', $dataset_id);
        $_studi_datset = $dataset_wrapper->field_dataset_studies->value();
        $_variables_dataset = $dataset_wrapper->field_dataset_variables->value();

        if (_mica_datasets_node_access($dataset_id, 'dataset', 'view') &&
          (((!empty($_variables_dataset)) && (empty($_GET['type']) || $_GET['type'] != 'study')))
        ) {
          $options['dataset'][$dataset_wrapper->getIdentifier()] = '---' . $dataset_wrapper->title->value();
        }
      }
    }
  }

  //Dataset by $result parameters ..iterating studies to retrieve datasets

  else {

    if (isset($result['node'])) {
      $nid_studies = array_keys($result['node']);
      foreach ($nid_studies as $nid_study) {
        $study_wrapper = entity_metadata_wrapper('node', $nid_study);

        foreach ($study_wrapper->field_study_populations->getIterator() as $populations) {
          foreach ($populations->field_pop_dce->getIterator() as $dce) {
            if (isset($is_study)) {
              $has_var = FALSE;
              foreach ($dce->field_dce_dataset->getIterator() as $dataset) {
                foreach ($dataset->field_dataset_variables->getIterator() as $warper_var) {
                  if (!empty($warper_var)) {
                    $has_var = TRUE;
                    break;
                  }
                }
                if (in_array($dataset->getIdentifier(), $keys) && ($has_var === TRUE) &&
                  ($dataset->field_dataset_type->value() != 'harmonization')
                ) {
                  $options['studies'][$nid_study] = truncate_utf8($study_wrapper->title->value(), 45, TRUE, TRUE);

                  $options['dce'][truncate_utf8($study_wrapper->title->value(), 25, TRUE, TRUE)][$dce->getIdentifier()] = '--' . $dce->title->value();
                }
              }
            }
          }
        }

      }
    }
  }

  return $options;
}

/*
 * Deal with Multi-lang sites Url
 * @return Base url depending on current lungage if set
 *
 * */
function _mica_dimensions_coverage_deal_with_multilangue_url() {
  global $language;
  $url_lang = $GLOBALS['base_url'];
  if (!empty($language) && !empty($language->prefix)) {
    $url_lang = $GLOBALS['base_url'] . '/' . $language->prefix;
  }
  return $url_lang;
}