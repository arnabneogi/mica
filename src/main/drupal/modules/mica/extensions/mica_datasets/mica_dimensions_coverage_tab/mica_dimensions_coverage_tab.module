<?php
/**
 * @file
 * Mica Datasets Crosstab module file
 */

include_once('mica_dimensions_coverage_tab_datatables_init.inc');

/**
 * Implements hook_menu()
 */
function mica_dimensions_coverage_tab_menu() {

  $items['content/datasets-domains-coverage-table'] = array(
    'title' => t('Domain Coverage table'),
    'page callback' => 'mica_dimensions_coverage_tab_page',
    'description' => '',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_LOCAL_ACTION,
  );
  return $items;
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function mica_dimensions_coverage_tab_menu_local_tasks_alter(&$data, $router_item, $root_path) {

  $links = array();

  switch ($root_path) {

    case 'datasets':
    case 'study-datasets':
    case 'harmonization-datasets':
      $links['view-dataset-crosstab-tab'] = array(
        '#theme' => 'menu_local_action',
        '#link' => array(
          'title' => t('Domain Coverage table'),
          'page callback' => 'mica_dimensions_coverage_tab_page',
          'href' => 'content/datasets-domains-coverage-table', // Arguments could be taxonomies and dataset
          'localized_options' => array(
            'attributes' => array('class' => 'highlight'),
            'query' => array(
              'type' => ($root_path === 'study-datasets') ? 'study' : 'harmonization',
            )
          )
        ),
      );
      break;
  }

  $data['actions']['output'] = array_merge($data['actions']['output'], $links);
}

/**
 * Implements hook_block_view().
 */

function mica_dimensions_coverage_tab_block_view($delta) {
  switch ($delta) {
    case 'tab-dimention-coverage':
      $content = _mica_dimensions_coverage_tab_tabledata_display();
      $block = array(
        //  'subject' => t('Mica Domain Coverage table: '),
        'content' => array('#markup' => $content),
      );

      return $block;
  }
}

/**
 * Implements hook_library().
 */
function mica_dimensions_coverage_tab_library() {
  $libraries = array();
  $lib_path = libraries_get_path('datatables');
  // Make sure we have a valid library path before returning library load info.
  if (!empty($lib_path)) {
    $libraries['datatables'] = array(
      'title' => 'DataTables',
      'website' => 'http://http://datatables.net/',
      'version' => '1.9',
      'js' => array(
        $lib_path . '/media/js/jquery.dataTables.js' => array(),
        $lib_path . '/extras/ColVis/media/js/ColVis.js' => array(),
        $lib_path . '/extras/FixedColumns/media/js/FixedColumns.js' => array(),
        $lib_path . '/extras/TableTools/media/js/ZeroClipboard.js' => array(),
        $lib_path . '/extras/TableTools/media/js/TableTools.js' => array()
      ),
      'css' => array(
        $lib_path . '/media/css/demo_table.css' => array(),
        $lib_path . '/extras/ColVis/media/css/ColVis.css' => array(),
        $lib_path . '/extras/FixedColumns/media/css/ColVisAlt.css' => array(),
        $lib_path . '/extras/TableTools/media/css/TableTools.css' => array()
      ),
    );
  }
  return $libraries;
}

Function _mica_dimensions_coverage_tab_tabledata_display() {
  $dataset = mica_dimensions_coverage_tab_datasets();

  /*Header to pass */
  $grouped_head = array();
  $study_head_group = array();
  $iter_study = 0;
  $clean_header = array();
  $header_row = array();
  foreach ($dataset['header'] as $datasets) {
    $clean_header += $datasets;
  }
  $dataset['header'] = $clean_header;
  foreach ($clean_header as $dataset_stud => $datasets) {
    foreach ($datasets as $id_dataset => $name_dataset) {
      $header_row[] = $name_dataset;
      $grouped_head[$id_dataset][$dataset_stud] = $name_dataset;
      if (!empty($id_dataset)) {
        $study_head_present = 'ok';
      }
    }
    $iter_study++;
  }
  foreach ($grouped_head as $key_stud => $grouped) {
    $study_head_group [] = array('data' => $key_stud, 'colspan' => count($grouped_head[$key_stud]));
  }

  /****clean data ******/
  $taxonomies = _mica_datasets_taxonomies();
  $rows = array();
  foreach ($taxonomies as $taxonomy) {
    $machine_name = substr($taxonomy[0], 0, drupal_strlen($taxonomy[0]) - 4);
    $vocabularies = taxonomy_vocabulary_machine_name_load($machine_name);
    $rows += _mica_dimensions_coverage_tab_dimension_table($vocabularies->vid, $dataset, $taxonomy[1]);
  }
  $contenttab = _mica_dimensions_coverage_tab_dimension_them_tab($header_row, $rows);

  /***************************/
  // Add Settings
  if (isset($study_head_present) && $study_head_present == 'ok') {
    ctools_add_js('mica_dimensions_coverage_tab.header_add', 'mica_dimensions_coverage_tab');
    drupal_add_js(array('header_to_add' => $study_head_group, 'study_title' => t('Study')), array('type' => 'setting'));
  }
  ctools_add_css('mica_dimensions_coverage_tab', 'mica_dimensions_coverage_tab');
  drupal_add_library('mica_dimensions_coverage_tab', 'datatables');
  ctools_add_js('mica_dimensions_coverage_tab.tab', 'mica_dimensions_coverage_tab');

  return $contenttab;
}

function _mica_dimensions_coverage_tab_dimension_table($vid, $data, $taxonomy) {
  $rows = array();
  // Fetch all terms
  $vocabulary = taxonomy_vocabulary_load($vid);
  $tree = taxonomy_get_tree($vocabulary->vid);
  if (!empty($tree)) {
    $options = array();
    foreach ($tree as $term) {
      // Initializes variables passed to theme hook.
      $variables = array(
        'text' => $term->name,
        'path' => 'variable-search',
        //'count' => 0,
        'options' => array(
          'attributes' => array('class' => 'facetapi-inactive'),
          'html' => FALSE,
          'query' => array(
            'f[0]' => $data['field_by_title'][strtolower($vocabulary->name)] . ':' . $term->tid,
          ),
        ),
      );

      // Themes the link, adds row to facets.
      $row[0] = array(
        'class' => array('leaf'),
        'data' => (isset($term->depth) && $term->depth > 0 ? theme('indentation', array('size' => $term->depth)) : '') .
          theme('facetapi_link_inactive', $variables),
      );

      // Themes the link, adds row to facets.
      $row[1] = array(
        'width' => '25%',
        'class' => array('taxo'),
        'data' => array(
          '#markup' => $taxonomy
        ),
      );
      // Fill facet count in the same order as the header

      if (isset($data['header'])) {
        $i = 0;
        foreach ($data['header'] as $dataset_id => $title) {

          if ($dataset_id > 0) {
            if (isset($dataset_id) && isset($data[$i][$dataset_id][$term->tid])) {
              $url = l($data[$i][$dataset_id][$term->tid]['count'], 'variable-search',
                array(
                  'query' => array(
                    'f[0]' => 'field_dataset:' . $dataset_id,
                    'f[1]' => $data[$i][$dataset_id][$term->tid]['facet'] . ':' . $term->tid,
                  ),
                )
              );
              $row[$i + 2] = array(
                'data' => array(
                  '#markup' => $url,
                ),
                'class' => array('center')
              );
            }
            else {
              $row[$i + 2] = array(
                'data' => array(
                  '#markup' => '-',
                ),
                'class' => array('center')
              );
            }
          }
          $i++;
        }
        $rows[] = $row;
      }
    }
  }
  return $rows;
}

function _mica_dimensions_coverage_tab_dimension_them_tab($head, $rows) {
  // Insert vocabulary name in the first column
  if (isset($head)) {
    array_unshift($head, '');
    array_splice($head, 0, 0, t("@title", array('@title' => 'Datasets')));
    $tab = theme(
      'table',
      array(
        'header' => $head,
        'rows' => $rows,
        'empty' => t('No information found'),
        'sticky' => FALSE,
        'attributes' => array('class' => 'dataset_crosstab', 'id' => 'example'),
      )
    );
    return $tab;
  }

  return theme(
    'table',
    array(
      'header' => array(),
      'rows' => $rows,
      'empty' => t('No information found'),
      'sticky' => FALSE,
      'attributes' => array('class' => 'dataset_crosstab', 'id' => 'example'),
    )
  );
}

function mica_dimensions_coverage_tab_table_alter(&$table, $table_id) {
  if ($table_id == 'example') {
    dpm($table);
  }
}

